openapi: 3.0.0
info:
  title: Academia Backend API
  version: 1.0.0
  description: |
    **Academia** is a comprehensive Student Information System that helps educational institutions manage various aspects of student life, academic progress, and institutional operations. This API serves as the backend of the Academia platform and provides essential endpoints for managing students, fees, timetables, results, notifications, placements, and more.

    The **Academia Backend API** provides functionalities for:
    - **User Management**: Register, authenticate, and manage student, faculty, and admin users.
    - **Student Management**: View, update, and manage student profiles, including personal details and academic records.
    - **Fees Management**: Handle fee structure, payments, and financial records.
    - **Hall Tickets**: Generate hall tickets for students for exams.
    - **Institute Management**: Manage institute details, courses, and departments.
    - **Notifications**: Broadcast important notifications to students, staff, and faculty.
    - **Placement**: Track and manage student placements, interviews, and job offers.
    - **Result Management**: Manage student academic results, grades, and report cards.
    - **Timetable Management**: View and manage timetables for students and staff.
    - **Profile Requests**: Handle requests for updates to student profiles.
    - **Session Management**: Manage user sessions and authentication tokens for secure access.

    This API supports the smooth operation of the Academia platform, making it easier for educational institutions to manage their students and academic processes in one integrated system.
tags:
  - name: Auth
    description: Authentication and session management for users.
  - name: Attendance
    description: Manage and update Attendance details of user.
  - name: Class
    description: Manage and update Class details.
  - name: Department
    description: Manage and update Department details.
  - name: Fees
    description: Handle student fees, payments, and financial records.
  - name: HallTicket
    description: Generation and management of hall tickets for exams.
  - name: Institute
    description: Manage institute and course-related details.
  - name: Notification
    description: Broadcast notifications to students and faculty.
  - name: Placement
    description: Manage placement processes, interviews, and job offers.
  - name: Profile
    description: Manage Student profile updates and modifications.
  - name: Request
    description: Handle Request for updates and broadcast.
  - name: Result
    description: Manage student academic results and report cards.
  - name: Student
    description: Manage student records, details, and academic progress.
  - name: Subject
    description: Manage subject records, details.
  - name: Timetable
    description: Manage student and faculty timetables.
  - name: Update
    description: Manage updates related to classes, assignments, and events.
  - name: User
    description: Management of user profiles and roles (students, faculty, admins).

components:
  securitySchemes:
    bearerAuth:
      description: "#### Example: Bearer [TOKEN]"
      type: http
      scheme: bearer
      bearerFormat: JWT

# ----------->> AUTH <<----------
paths:
  /api/v1/auth/signup:
    post:
      summary: Register a new user
      description: This endpoint allows you to register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: example@email.com
                password:
                  type: string
                  example: password123
                role:
                  type: string
                  example: student
                otp:
                  type: string
                  example: abcd1234
      responses:
        201:
          description: User has been created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "User authenticated successfully"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c09b67191a749b67191a74"
                      email:
                        type: string
                        example: "example@mail.com"
                      password:
                        type: string
                        example: "password123"
                      role:
                        type: string
                        example: "student"
                      status:
                        type: string
                        example: "none"
                      createdAt:
                        type: string
                        example: "2025-02-27T17:05:43.338Z"
                      updatedAt:
                        type: string
                        example: "2025-02-27T17:05:43.338Z"
                      userId:
                        type: string
                        example: "10"
  /api/v1/auth/login:
    post:
      summary: Log in an existing user
      description: This endpoint allows you to authenticate user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "User authenticated successfully"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c09b67191a749b67191a74"
                      email:
                        type: string
                        example: "example@mail.com"
                      password:
                        type: string
                        example: "password123"
                      role:
                        type: string
                        example: "student"
                      status:
                        type: string
                        example: "none"
                      createdAt:
                        type: string
                        example: "2025-02-27T17:05:43.338Z"
                      updatedAt:
                        type: string
                        example: "2025-02-27T17:05:43.338Z"
                      userId:
                        type: string
                        example: "10"
                      token:
                        type: string
                        example: "jwt_token"
  /api/v1/auth/sendOtp:
    post:
      summary: Send verification OTP email to user
      description: This endpoint allows you to send a verification OTP to a user while registration.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
      responses:
        200:
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OTP sent successfully."

  # ----------->> USER <<----------
  /api/v1/user:
    get:
      summary: Get all users
      description: This endpoint allows you to get list of all user.
      security:
        - bearerAuth: []
      tags:
        - User
      responses:
        200:
          description: User has been Fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "User has been Fetched successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "67a8cd4f4a3c34a3c34a3c38"
                        email:
                          type: string
                          example: "example@email.com"
                        role:
                          type: string
                          example: "admin"
                        status:
                          type: string
                          example: "none"
                        createdAt:
                          type: string
                          example: "2025-02-09T15:44:15.437Z"
                        updatedAt:
                          type: string
                          example: "2025-02-09T15:44:15.437Z"
                        userId:
                          type: integer
                          example: 1
  /api/v1/user/{userId}:
    get:
      summary: Get User by userId
      description: This endpoint allows you to get user based on userId.
      security:
        - bearerAuth: []
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: User has been Fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "User has been Fetched successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67a8cd4f4a3c34a3c34a3c38"
                      email:
                        type: string
                        example: "example@email.com"
                      role:
                        type: string
                        example: "admin"
                      status:
                        type: string
                        example: "none"
                      createdAt:
                        type: string
                        example: "2025-02-09T15:44:15.437Z"
                      updatedAt:
                        type: string
                        example: "2025-02-09T15:44:15.437Z"
                      userId:
                        type: integer
                        example: 1
    put:
      summary: Update User by userId
      description: This endpoint allows you to update user based on userId.
      security:
        - bearerAuth: []
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      requestBody:
        description: Update user details.
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "kasish@academia.edu"
                role:
                  type: string
                  example: "teacher"
                status:
                  type: string
                  example: "none"
              required:
                - email
                - role
                - status
      responses:
        200:
          description: User has been Updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "User has been Updated successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67a8cd4f4a3c34a3c34a3c38"
                      email:
                        type: string
                        example: "example@email.com"
                      role:
                        type: string
                        example: "admin"
                      status:
                        type: string
                        example: "none"
                      createdAt:
                        type: string
                        example: "2025-02-09T15:44:15.437Z"
                      updatedAt:
                        type: string
                        example: "2025-02-09T15:44:15.437Z"
                      userId:
                        type: integer
                        example: 1

  # ----------->> UPDATE <<----------
  /api/v1/update:
    get:
      summary: Get all updates
      description: This endpoint allows you to get all updates.
      security:
        - bearerAuth: []
      tags:
        - Update
      responses:
        200:
          description: Updates has been Fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Updates has been Fetched successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "67c348a195dfd31b5ce579ec"
                        date:
                          type: string
                          format: date-time
                          example: "2025-03-01T00:00:00.000Z"
                        title:
                          type: string
                          example: "MYSY Scholarship"
                        description:
                          type: string
                          example: "description about update"
                        sender:
                          type: string
                          example: "67c09a33191a741be80f8f47"
                        class:
                          type: string
                          example: "67c09a33191a741be80f8f47"
                        lastUpdated:
                          type: string
                          format: date-time
                          example: "2025-03-01T00:00:00.000Z"
                        tags:
                          type: string
                          example: "Scholarships-MYSY"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T17:49:21.077Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T17:49:21.077Z"
    post:
      summary: Create Update
      description: This endpoint allows you to create a new update
      security:
        - bearerAuth: []
      tags:
        - Update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-07-15"
                title:
                  type: string
                  example: "Engineering 404 - Project Presentation Dates"
                description:
                  type: string
                  example: "Description"
                sender:
                  type: string
                  example: "67c09a0c191a0f8f3f0f8f3f"
                class:
                  type: string
                  example: "67c09a0c191a0f8f3f0f8f3f"
                lastUpdated:
                  type: string
                  format: date
                  example: "2025-04-15"
                tags:
                  type: string
                  example: "Engineering 404, Project, Presentation"
              required:
                - date
                - title
                - description
                - sender
                - class
                - lastUpdated
                - tags
      responses:
        201:
          description: Notification created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c3f12fa78cdee267c52d1c"
                      date:
                        type: string
                        format: date-time
                        example: "2025-07-15T00:00:00.000Z"
                      title:
                        type: string
                        example: "Engineering 404 - Project Presentation Dates"
                      description:
                        type: string
                        example: "The presentation dates for Engineering 404 have been finalized. Presentations will take place from July 20th to July 25th. Please check the course portal for your scheduled date and time."
                      sender:
                        type: string
                        example: "67c09a0c191a741be80f8f3f"
                      lastUpdated:
                        type: string
                        format: date-time
                        example: "2025-04-15T00:00:00.000Z"
                      tags:
                        type: string
                        example: "Engineering 404, Project, Presentation"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T05:48:31.773Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T05:48:31.773Z"
  /api/v1/update/{updateId}:
    get:
      summary: Get update by Id
      description: This endpoint allows you to get update by UpdateId.
      security:
        - bearerAuth: []
      tags:
        - Update
      parameters:
        - name: updateId
          in: path
          required: true
          description: ID of the update
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Updates has been Fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Updates has been Fetched successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c348a195dfd31b5ce579ec"
                      date:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      title:
                        type: string
                        example: "MYSY Scholarship"
                      description:
                        type: string
                        example: "description about update"
                      sender:
                        type: string
                        example: "67c09a33191a741be80f8f47"
                      class:
                        type: string
                        example: "67c09a33191a741be80f8f47"
                      lastUpdated:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      tags:
                        type: string
                        example: "Scholarships-MYSY"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T17:49:21.077Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T17:49:21.077Z"
    put:
      summary: Update update
      description: This endpoint allows you to update a update using updateId
      security:
        - bearerAuth: []
      tags:
        - Update
      parameters:
        - name: updateId
          in: path
          required: true
          description: ID of the update
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-07-15"
                title:
                  type: string
                  example: "Engineering 404 - Project Presentation Dates"
                description:
                  type: string
                  example: "Description"
                sender:
                  type: string
                  example: "67c09a0c191a0f8f3f0f8f3f"
                class:
                  type: string
                  example: "67c09a0c191a0f8f3f0f8f3f"
                lastUpdated:
                  type: string
                  format: date
                  example: "2025-04-15"
                tags:
                  type: string
                  example: "Engineering 404, Project, Presentation"
              required:
                - date
                - title
                - description
                - sender
                - class
                - lastUpdated
                - tags
      responses:
        200:
          description: Notification edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Data edited successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c3f12fa78cdee267c52d1c"
                      date:
                        type: string
                        format: date-time
                        example: "2025-07-15T00:00:00.000Z"
                      title:
                        type: string
                        example: "Engineering 404 - Project Presentation Dates"
                      description:
                        type: string
                        example: "The presentation dates for Engineering 404 have been finalized. Presentations will take place from July 20th to July 25th. Please check the course portal for your scheduled date and time."
                      sender:
                        type: string
                        example: "67c09a0c191a741be80f8f3f"
                      class:
                        type: string
                        example: "67c09a0c191a741be80f8f3f"
                      lastUpdated:
                        type: string
                        format: date-time
                        example: "2025-04-15T00:00:00.000Z"
                      tags:
                        type: string
                        example: "Engineering 404, Project, Presentation"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T05:48:31.773Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T05:48:31.773Z"
    delete:
      summary: Delete update
      description: This endpoint allows you to delete a update using updateId
      security:
        - bearerAuth: []
      tags:
        - Update
      parameters:
        - name: updateId
          in: path
          required: true
          description: ID of the update
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Update deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Data deleted successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  # ----------->> INSTITUTE <<----------
  # TODO Update departments fields when created
  /api/v1/institute:
    get:
      summary: Get all institutes.
      description: This endpoint allows you to get all institutes.
      security:
        - bearerAuth: []
      tags:
        - Institute
      responses:
        200:
          description: Institutes has been Fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Institutes has been Fetched successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "67c348a195dfd31b5ce579ec"
                        name:
                          type: string
                          example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                        departments:
                          type: array
                          example: "[]"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T17:49:21.077Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T17:49:21.077Z"
    post:
      summary: Create Institute
      description: This endpoint allows you to create a new institute
      security:
        - bearerAuth: []
      tags:
        - Institute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                departments:
                  type: array
                  example:
                    ["60c72b2f9e1d4f20b8a5f0f9", "60c72b2f9e1d4f20b8a5hfh9"]
                  items:
                    type: string
                    formate: objectId
              required:
                - name
      responses:
        201:
          description: Institute created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c3f12fa78cdee267c52d1c"
                      name:
                        type: string
                        example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                      departments:
                        type: array
                        example:
                          [
                            "60c72b2f9e1d4f20b8a5f0f9",
                            "60c72b2f9e1d4f20b8a5hfh9",
                          ]
                        items:
                          type: string
                          formate: objectId
  /api/v1/institute/{instituteId}:
    get:
      summary: Get institute by Id
      description: This endpoint allows you to get institute by InstituteId.
      security:
        - bearerAuth: []
      tags:
        - Institute
      parameters:
        - name: instituteId
          in: path
          required: true
          description: ID of the institute
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Institutes has been Fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Institutes has been Fetched successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "67c348a195dfd31b5ce579ec"
                        name:
                          type: string
                          example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                        departments:
                          type: array
                          example: "[]"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T17:49:21.077Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T17:49:21.077Z"
    put:
      summary: Update institute
      description: This endpoint allows you to update a update using updateId
      security:
        - bearerAuth: []
      tags:
        - Institute
      parameters:
        - name: instituteId
          in: path
          required: true
          description: ID of the institute
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                departments:
                  type: array
                  example:
                    ["60c72b2f9e1d4f20b8a5f0f9", "60c72b2f9e1d4f20b8a5hfh9"]
                  items:
                    type: string
                    formate: objectId
              required:
                - name
      responses:
        201:
          description: Institute created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c3f12fa78cdee267c52d1c"
                      name:
                        type: string
                        example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                      departments:
                        type: array
                        example:
                          [
                            "60c72b2f9e1d4f20b8a5f0f9",
                            "60c72b2f9e1d4f20b8a5hfh9",
                          ]
                        items:
                          type: string
                          formate: objectId
    delete:
      summary: Delete Institute
      description: This institute allows you to delete a update using instituteId
      security:
        - bearerAuth: []
      tags:
        - Institute
      parameters:
        - name: instituteId
          in: path
          required: true
          description: ID of the institute
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Institute deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Data deleted successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  # ----------->> SUBJECT <<----------
  /api/v1/subject:
    get:
      summary: Get all subjects
      description: This endpoint allows you to get all subjects.
      security:
        - bearerAuth: []
      tags:
        - Subject
      responses:
        200:
          description: Data fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Data fetched successfully.
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "67c48aabc7daf5f6ecb7fdd2"
                        name:
                          type: string
                          example: "Object Oriented Programming in Java"
                        subjectCode:
                          type: string
                          example: "IT-2014"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-03-02T16:43:23.676Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-03-02T16:43:23.676Z"
    post:
      summary: Create Subject
      description: This endpoint allows you to create a new subject
      security:
        - bearerAuth: []
      tags:
        - Subject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - subjectCode
              properties:
                name:
                  type: string
                  example: "Introduction To Cyber Security"
                subjectCode:
                  type: string
                  example: "IT-2001"
      responses:
        201:
          description: Data created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Object Oriented Programming in C++"
                      subjectCode:
                        type: string
                        example: "IT-2015"
                      _id:
                        type: string
                        example: "67c48ab7c7daf5f6ecb7fdd4"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T16:43:35.106Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T16:43:35.106Z"
  /api/v1/subject/{subjectId}:
    get:
      summary: Get Subject by Id
      description: This endpoint allows you to get subject by SubjectId.
      security:
        - bearerAuth: []
      tags:
        - Subject
      parameters:
        - name: subjectId
          in: path
          required: true
          description: ID of the subject
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Data fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Data fetched successfully.
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c48aabc7daf5f6ecb7fdd2"
                      name:
                        type: string
                        example: "Object Oriented Programming in Java"
                      subjectCode:
                        type: string
                        example: "IT-2014"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T16:43:23.676Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T16:43:23.676Z"
    put:
      summary: Update Subject
      description: This endpoint allows you to Update a subject
      security:
        - bearerAuth: []
      tags:
        - Subject
      parameters:
        - name: subjectId
          in: path
          required: true
          description: ID of the subject
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - subjectCode
              properties:
                name:
                  type: string
                  example: "Introduction To Cyber Security"
                subjectCode:
                  type: string
                  example: "IT-2001"
      responses:
        200:
          description: Data Updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Object Oriented Programming in C++"
                      subjectCode:
                        type: string
                        example: "IT-2015"
                      _id:
                        type: string
                        example: "67c48ab7c7daf5f6ecb7fdd4"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T16:43:35.106Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T16:43:35.106Z"
    delete:
      summary: Delete Subject
      description: This endpoint allows you to delete a subject using subjectId
      security:
        - bearerAuth: []
      tags:
        - Subject
      parameters:
        - name: subjectId
          in: path
          required: true
          description: ID of the subject
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Subject deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Data deleted successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object

  # ----------->> ATTENDANCE <<----------
  /api/v1/attendance:
    get:
      summary: Get all Attendance
      description: This endpoint allows you to get all Attendance.
      security:
        - bearerAuth: []
      tags:
        - Attendance
      responses:
        "200":
          description: Data fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Data fetched successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "67c5d4295baf78fdded2f358"
                        userId:
                          type: string
                          example: "67c0aa3db1c6a62b266448d9"
                        attendanceRecords:
                          type: array
                          items:
                            type: object
                            properties:
                              _id:
                                type: string
                                example: "67c5d5b21400c9c728bf624b"
                              date:
                                type: string
                                format: date-time
                                example: "2025-03-02T00:00:00.000Z"
                              time:
                                type: string
                                example: "04-30"
                              status:
                                type: string
                                example: "Present"
                              subjectId:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                    example: "67c48ae5c7daf5f6ecb7fdd8"
                                  name:
                                    type: string
                                    example: "Introduction To Cyber Security"
                                  subjectCode:
                                    type: string
                                    example: "IT-2001"
                                  createdAt:
                                    type: string
                                    format: date-time
                                    example: "2025-03-02T16:44:21.173Z"
                                  updatedAt:
                                    type: string
                                    format: date-time
                                    example: "2025-03-02T16:44:21.173Z"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-03-03T16:09:13.052Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-03-03T16:15:46.544Z"
    post:
      summary: Create Attendance
      description: This endpoint allows you to create a new attendance
      security:
        - bearerAuth: []
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  example: "67c0aa3db1c6a62b266448d9"
      responses:
        201:
          description: Data created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: "67c0aa3db1c6a62b266448d9"
                      attendanceRecords:
                        type: array
                        items: {}
                        example: []
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-03T16:09:13.052Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-03T16:09:13.052Z"
  /api/v1/attendance/{attendanceId}:
    get:
      summary: Get Attendance by Id
      description: This endpoint allows you to get attendance by AttendanceId.
      security:
        - bearerAuth: []
      tags:
        - Attendance
      parameters:
        - name: attendanceId
          in: path
          required: true
          description: ID of the attendance
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Data fetched successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Data fetched successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      userId:
                        type: string
                        example: "67c0aa3db1c6a62b266448d9"
                      attendanceRecords:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "67c5d5b21400c9c728bf624b"
                            date:
                              type: string
                              format: date-time
                              example: "2025-03-02T00:00:00.000Z"
                            time:
                              type: string
                              example: "04-30"
                            status:
                              type: string
                              example: "Present"
                            subjectId:
                              type: object
                              properties:
                                _id:
                                  type: string
                                  example: "67c48ae5c7daf5f6ecb7fdd8"
                                name:
                                  type: string
                                  example: "Introduction To Cyber Security"
                                subjectCode:
                                  type: string
                                  example: "IT-2001"
                                createdAt:
                                  type: string
                                  format: date-time
                                  example: "2025-03-02T16:44:21.173Z"
                                updatedAt:
                                  type: string
                                  format: date-time
                                  example: "2025-03-02T16:44:21.173Z"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-03T16:09:13.052Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-03T16:15:46.544Z"
    put:
      summary: Update attendance records
      security:
        - bearerAuth: []
      tags:
        - Attendance
      parameters:
        - name: attendanceId
          in: path
          required: true
          description: ID of the attendance
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceRecords:
                  type: array
                  items:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date-time
                        example: "2025-01-02T00:00:00.000Z"
                      time:
                        type: string
                        example: "10-30"
                      subjectId:
                        type: string
                        example: "67c48ae5c7daf5f6ecb7fdd8"
                      status:
                        type: string
                        example: "Absent"
              required:
                - attendanceRecords
      responses:
        200:
          description: Attendance records updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Data updated successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c48645f44671bdd06f0e47"
                      userId:
                        type: string
                        example: "67c09a33191a741be80f8f47"
                      attendanceRecords:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "67c48fe7a5765c0d9bf5813e"
                            date:
                              type: string
                              format: date-time
                              example: "2025-01-02T00:00:00.000Z"
                            time:
                              type: string
                              example: "10-30"
                            status:
                              type: string
                              example: "Absent"
                            subjectId:
                              type: string
                              example: "67c48ae5c7daf5f6ecb7fdd8"
                            subject:
                              type: object
                              properties:
                                _id:
                                  type: string
                                  example: "67c48ae5c7daf5f6ecb7fdd8"
                                name:
                                  type: string
                                  example: "Introduction To Cyber Security"
                                subjectCode:
                                  type: string
                                  example: "IT-2001"
                                createdAt:
                                  type: string
                                  format: date-time
                                  example: "2025-03-02T16:44:21.173Z"
                                updatedAt:
                                  type: string
                                  format: date-time
                                  example: "2025-03-02T16:44:21.173Z"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T16:24:37.465Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-02T17:05:43.155Z"
    delete:
      summary: Delete Attendance
      description: This endpoint allows you to delete a Attendance using AttendanceId
      security:
        - bearerAuth: []
      tags:
        - Attendance
      parameters:
        - name: attendanceId
          in: path
          required: true
          description: ID of the attendance
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Attendance deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Data deleted successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
  /api/v1/attendance/{attendanceId}/add:
    post:
      summary: Add a new attendance record
      description: This endpoint allows you to add a Attendance record
      security:
        - bearerAuth: []
      tags:
        - Attendance
      parameters:
        - name: attendanceId
          in: path
          required: true
          description: ID of the attendance record to add a new entry
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-03-02"
                time:
                  type: string
                  example: "04-30"
                subjectId:
                  type: string
                  example: "67c48ae5c7daf5f6ecb7fdd8"
                status:
                  type: string
                  example: "Present"
              required:
                - date
                - time
                - subjectId
                - status
      responses:
        201:
          description: Attendance record created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      userId:
                        type: string
                        example: "67c0aa3db1c6a62b266448d9"
                      attendanceRecords:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "67c5d5b21400c9c728bf624b"
                            date:
                              type: string
                              format: date-time
                              example: "2025-03-02T00:00:00.000Z"
                            time:
                              type: string
                              example: "04-30"
                            status:
                              type: string
                              example: "Present"
                            subjectId:
                              type: string
                              example: "67c48ae5c7daf5f6ecb7fdd8"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-03T16:09:13.052Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-03T16:15:46.544Z"
                      __v:
                        type: integer
                        example: 1

  /api/v1/fees:
    get:
      summary: Get all fees
      description: This endpoint allows you to retrieve all fee records.
      security:
        - bearerAuth: []
      tags:
        - Fees
      responses:
        200:
          description: Successfully fetched fee records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Fees fetched successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "5f76c7f073bd614254c9f91b"
                        semester:
                          type: number
                          example: 1
                        date:
                          type: string
                          format: date-time
                          example: "2025-03-01T00:00:00.000Z"
                        amount:
                          type: number
                          example: 2000
                        fine:
                          type: number
                          example: 500
                        status:
                          type: string
                          enum: ["paid", "unpaid"]
                          example: "unpaid"
                        paidDate:
                          type: string
                          format: date-time
                          example: "2025-03-02T00:00:00.000Z"
                        mode:
                          type: string
                          example: "Credit Card"
    post:
      summary: Create a new fee record
      description: This endpoint allows you to create a new fee record.
      security:
        - bearerAuth: []
      tags:
        - Fees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                semester:
                  type: number
                  example: 1
                date:
                  type: string
                  format: date
                  example: "2025-03-01"
                amount:
                  type: number
                  example: 2000
                fine:
                  type: number
                  example: 500
                status:
                  type: string
                  enum: ["paid", "unpaid"]
                  example: "unpaid"
                paidDate:
                  type: string
                  format: date-time
                  example: "2025-03-02T00:00:00.000Z"
                mode:
                  type: string
                  example: "Credit Card"
              required:
                - semester
                - date
                - amount
                - fine
                - status
                - mode
      responses:
        201:
          description: Fee created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: "Fee created successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "5f76c7f073bd614254c9f91b"
                      semester:
                        type: number
                        example: 1
                      date:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      amount:
                        type: number
                        example: 2000
                      fine:
                        type: number
                        example: 500
                      status:
                        type: string
                        enum: ["paid", "unpaid"]
                        example: "unpaid"
                      paidDate:
                        type: string
                        format: date-time
                        example: "2025-03-02T00:00:00.000Z"
                      mode:
                        type: string
                        example: "Credit Card"

  /api/v1/fees/{feeId}:
    get:
      summary: Get fee by ID
      description: This endpoint allows you to retrieve a fee record by its ID.
      security:
        - bearerAuth: []
      tags:
        - Fees
      parameters:
        - name: feeId
          in: path
          required: true
          description: ID of the fee to retrieve
          schema:
            type: string
            example: "5f76c7f073bd614254c9f91b"
      responses:
        200:
          description: Successfully fetched fee record.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Fee fetched successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "5f76c7f073bd614254c9f91b"
                      semester:
                        type: number
                        example: 1
                      date:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      amount:
                        type: number
                        example: 2000
                      fine:
                        type: number
                        example: 500
                      status:
                        type: string
                        enum: ["paid", "unpaid"]
                        example: "unpaid"
                      paidDate:
                        type: string
                        format: date-time
                        example: "2025-03-02T00:00:00.000Z"
                      mode:
                        type: string
                        example: "Credit Card"
    put:
      summary: Update a fee record
      description: This endpoint allows you to update a fee record by its ID.
      security:
        - bearerAuth: []
      tags:
        - Fees
      parameters:
        - name: feeId
          in: path
          required: true
          description: ID of the fee to update
          schema:
            type: string
            example: "5f76c7f073bd614254c9f91b"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                semester:
                  type: number
                  example: 1
                date:
                  type: string
                  format: date
                  example: "2025-03-01"
                amount:
                  type: number
                  example: 2000
                fine:
                  type: number
                  example: 500
                status:
                  type: string
                  enum: ["paid", "unpaid"]
                  example: "unpaid"
                paidDate:
                  type: string
                  format: date-time
                  example: "2025-03-02T00:00:00.000Z"
                mode:
                  type: string
                  example: "Credit Card"
              required:
                - semester
                - date
                - amount
                - fine
                - status
                - mode
      responses:
        200:
          description: Fee updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Fee updated successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "5f76c7f073bd614254c9f91b"
                      semester:
                        type: number
                        example: 1
                      date:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      amount:
                        type: number
                        example: 2000
                      fine:
                        type: number
                        example: 500
                      status:
                        type: string
                        enum: ["paid", "unpaid"]
                        example: "unpaid"
                      paidDate:
                        type: string
                        format: date-time
                        example: "2025-03-02T00:00:00.000Z"
                      mode:
                        type: string
                        example: "Credit Card"
    delete:
      summary: Delete a fee record
      description: This endpoint allows you to delete a fee record by its ID.
      security:
        - bearerAuth: []
      tags:
        - Fees
      parameters:
        - name: feeId
          in: path
          required: true
          description: ID of the fee to delete
          schema:
            type: string
            example: "5f76c7f073bd614254c9f91b"
      responses:
        200:
          description: Fee deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Fee deleted successfully."

  # ----------->> HALL TICKET <<----------
  /api/v1/hallticket:
    get:
      summary: Get all hall tickets
      description: This endpoint allows you to retrieve all hall tickets.
      security:
        - bearerAuth: []
      tags:
        - HallTicket
      responses:
        200:
          description: Successfully fetched hall tickets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Data fetched successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "67c5d4295baf78fdded2f358"
                        seatNo:
                          type: number
                          example: 101
                        name:
                          type: string
                          example: "John Doe"
                        institute:
                          type: string
                          example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                        department:
                          type: string
                          example: "Computer Engineering"
                        schedule:
                          type: array
                          items:
                            type: object
                            properties:
                              subject:
                                type: string
                                example: "Object Oriented Programming"
                              date:
                                type: string
                                format: date-time
                                example: "2025-03-15T00:00:00.000Z"
                              startTime:
                                type: string
                                format: date-time
                                example: "2025-03-15T09:00:00.000Z"
                              endTime:
                                type: string
                                format: date-time
                                example: "2025-03-15T12:00:00.000Z"
                              center:
                                type: string
                                example: "Main Campus"
                              roomNo:
                                type: string
                                example: "101"
                              block:
                                type: number
                                example: 1
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T00:00:00.000Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T00:00:00.000Z"
    post:
      summary: Create a new hall ticket
      description: This endpoint allows you to create a new hall ticket.
      security:
        - bearerAuth: []
      tags:
        - HallTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - seatNo
                - name
                - institute
                - department
                - schedule
              properties:
                seatNo:
                  type: number
                  example: 101
                name:
                  type: string
                  example: "John Doe"
                institute:
                  type: string
                  example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                department:
                  type: string
                  example: "Computer Engineering"
                schedule:
                  type: array
                  items:
                    type: object
                    required:
                      - subject
                      - date
                      - startTime
                      - endTime
                      - center
                      - roomNo
                      - block
                    properties:
                      subject:
                        type: string
                        example: "Object Oriented Programming"
                      date:
                        type: string
                        format: date
                        example: "2025-03-15"
                      startTime:
                        type: string
                        format: date-time
                        example: "2025-03-15T09:00:00.000Z"
                      endTime:
                        type: string
                        format: date-time
                        example: "2025-03-15T12:00:00.000Z"
                      center:
                        type: string
                        example: "Main Campus"
                      roomNo:
                        type: string
                        example: "101"
                      block:
                        type: number
                        example: 1
      responses:
        201:
          description: Hall ticket created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      seatNo:
                        type: number
                        example: 101
                      name:
                        type: string
                        example: "John Doe"
                      institute:
                        type: string
                        example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                      department:
                        type: string
                        example: "Computer Engineering"
                      schedule:
                        type: array
                        items:
                          type: object
                          properties:
                            subject:
                              type: string
                              example: "Object Oriented Programming"
                            date:
                              type: string
                              format: date-time
                              example: "2025-03-15T00:00:00.000Z"
                            startTime:
                              type: string
                              format: date-time
                              example: "2025-03-15T09:00:00.000Z"
                            endTime:
                              type: string
                              format: date-time
                              example: "2025-03-15T12:00:00.000Z"
                            center:
                              type: string
                              example: "Main Campus"
                            roomNo:
                              type: string
                              example: "101"
                            block:
                              type: number
                              example: 1
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"

  /api/v1/hallticket/{hallTicketId}:
    get:
      summary: Get hall ticket by ID
      description: This endpoint allows you to retrieve a hall ticket by its ID.
      security:
        - bearerAuth: []
      tags:
        - HallTicket
      parameters:
        - name: hallTicketId
          in: path
          required: true
          description: ID of the hall ticket to retrieve
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Successfully fetched hall ticket.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Data fetched successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      seatNo:
                        type: number
                        example: 101
                      name:
                        type: string
                        example: "John Doe"
                      institute:
                        type: string
                        example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                      department:
                        type: string
                        example: "Computer Engineering"
                      schedule:
                        type: array
                        items:
                          type: object
                          properties:
                            subject:
                              type: string
                              example: "Object Oriented Programming"
                            date:
                              type: string
                              format: date-time
                              example: "2025-03-15T00:00:00.000Z"
                            startTime:
                              type: string
                              format: date-time
                              example: "2025-03-15T09:00:00.000Z"
                            endTime:
                              type: string
                              format: date-time
                              example: "2025-03-15T12:00:00.000Z"
                            center:
                              type: string
                              example: "Main Campus"
                            roomNo:
                              type: string
                              example: "101"
                            block:
                              type: number
                              example: 1
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
    put:
      summary: Update a hall ticket
      description: This endpoint allows you to update a hall ticket by its ID.
      security:
        - bearerAuth: []
      tags:
        - HallTicket
      parameters:
        - name: hallTicketId
          in: path
          required: true
          description: ID of the hall ticket to update
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seatNo:
                  type: number
                  example: 101
                name:
                  type: string
                  example: "John Doe"
                institute:
                  type: string
                  example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                department:
                  type: string
                  example: "Computer Engineering"
                schedule:
                  type: array
                  items:
                    type: object
                    properties:
                      subject:
                        type: string
                        example: "Object Oriented Programming"
                      date:
                        type: string
                        format: date
                        example: "2025-03-15"
                      startTime:
                        type: string
                        format: date-time
                        example: "2025-03-15T09:00:00.000Z"
                      endTime:
                        type: string
                        format: date-time
                        example: "2025-03-15T12:00:00.000Z"
                      center:
                        type: string
                        example: "Main Campus"
                      roomNo:
                        type: string
                        example: "101"
                      block:
                        type: number
                        example: 1
      responses:
        200:
          description: Hall ticket updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Data updated successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      seatNo:
                        type: number
                        example: 101
                      name:
                        type: string
                        example: "John Doe"
                      institute:
                        type: string
                        example: "Chhotubhai Gopalbhai Patel Institute of Technology"
                      department:
                        type: string
                        example: "Computer Engineering"
                      schedule:
                        type: array
                        items:
                          type: object
                          properties:
                            subject:
                              type: string
                              example: "Object Oriented Programming"
                            date:
                              type: string
                              format: date-time
                              example: "2025-03-15T00:00:00.000Z"
                            startTime:
                              type: string
                              format: date-time
                              example: "2025-03-15T09:00:00.000Z"
                            endTime:
                              type: string
                              format: date-time
                              example: "2025-03-15T12:00:00.000Z"
                            center:
                              type: string
                              example: "Main Campus"
                            roomNo:
                              type: string
                              example: "101"
                            block:
                              type: number
                              example: 1
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
    delete:
      summary: Delete a hall ticket
      description: This endpoint allows you to delete a hall ticket by its ID.
      security:
        - bearerAuth: []
      tags:
        - HallTicket
      parameters:
        - name: hallTicketId
          in: path
          required: true
          description: ID of the hall ticket to delete
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Hall ticket deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Data deleted successfully."
                  data:
                    type: object

  # ----------->> NOTIFICATION <<----------
  /api/v1/notification:
    get:
      summary: Get all notifications
      description: This endpoint allows you to retrieve all notifications, sorted by date in descending order.
      security:
        - bearerAuth: []
      tags:
        - Notification
      responses:
        200:
          description: Successfully fetched notifications.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Data fetched successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "67c5d4295baf78fdded2f358"
                        date:
                          type: string
                          format: date-time
                          example: "2025-03-15T00:00:00.000Z"
                        content:
                          type: string
                          example: "Important announcement about upcoming examinations"
                        link:
                          type: string
                          example: "https://example.com/announcements/exam-schedule"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T00:00:00.000Z"
                        updatedAt:
                          type: string
                          format: date-time
                          example: "2025-03-01T00:00:00.000Z"
    post:
      summary: Create a new notification
      description: This endpoint allows you to create a new notification.
      security:
        - bearerAuth: []
      tags:
        - Notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - date
                - content
                - link
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-03-15"
                content:
                  type: string
                  example: "Important announcement about upcoming examinations"
                link:
                  type: string
                  example: "https://example.com/announcements/exam-schedule"
      responses:
        201:
          description: Notification created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: "Data created successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      date:
                        type: string
                        format: date-time
                        example: "2025-03-15T00:00:00.000Z"
                      content:
                        type: string
                        example: "Important announcement about upcoming examinations"
                      link:
                        type: string
                        example: "https://example.com/announcements/exam-schedule"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"

  /api/v1/notification/{notificationId}:
    get:
      summary: Get notification by ID
      description: This endpoint allows you to retrieve a notification by its ID.
      security:
        - bearerAuth: []
      tags:
        - Notification
      parameters:
        - name: notificationId
          in: path
          required: true
          description: ID of the notification to retrieve
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Successfully fetched notification.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Data fetched successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      date:
                        type: string
                        format: date-time
                        example: "2025-03-15T00:00:00.000Z"
                      content:
                        type: string
                        example: "Important announcement about upcoming examinations"
                      link:
                        type: string
                        example: "https://example.com/announcements/exam-schedule"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
    put:
      summary: Update a notification
      description: This endpoint allows you to update a notification by its ID.
      security:
        - bearerAuth: []
      tags:
        - Notification
      parameters:
        - name: notificationId
          in: path
          required: true
          description: ID of the notification to update
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-03-15"
                content:
                  type: string
                  example: "Important announcement about upcoming examinations"
                link:
                  type: string
                  example: "https://example.com/announcements/exam-schedule"
      responses:
        200:
          description: Notification updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Data updated successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "67c5d4295baf78fdded2f358"
                      date:
                        type: string
                        format: date-time
                        example: "2025-03-15T00:00:00.000Z"
                      content:
                        type: string
                        example: "Important announcement about upcoming examinations"
                      link:
                        type: string
                        example: "https://example.com/announcements/exam-schedule"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2025-03-01T00:00:00.000Z"
    delete:
      summary: Delete a notification
      description: This endpoint allows you to delete a notification by its ID.
      security:
        - bearerAuth: []
      tags:
        - Notification
      parameters:
        - name: notificationId
          in: path
          required: true
          description: ID of the notification to delete
          schema:
            type: string
            example: "67c5d4295baf78fdded2f358"
      responses:
        200:
          description: Notification deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  code:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "Data deleted successfully."
                  data:
                    type: object
